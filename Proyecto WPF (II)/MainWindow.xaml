<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Proyecto_WPF__II_"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        x:Class="Proyecto_WPF__II_.MainWindow"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        mc:Ignorable="d"
        Title="Cines Kesselman"
        MinHeight="900"
        MinWidth="1200"
        WindowState="Maximized">
    <Window.Resources>
        <local:NombreSalaConverter x:Key="nombreSalaConverter" />
        <local:SesionesConverter x:Key="sesionesConverter" />
        <local:CapacidadSalaConverter x:Key="capacidadSalaConverter" />
        <local:DisponibleSalaConverter x:Key="disponibleSalaConverter" />
        <local:DisponiblesConverter x:Key="disponiblesConverter" />
        <local:OcupadasConverter x:Key="ocupadasConverter" />
        <local:NombreSalaSesionConverter x:Key="nombreSalaSesionConverter" />
        <Style TargetType="{x:Type Border}">
            <Setter Property="BorderBrush"
                    Value="BlueViolet" />
        </Style>
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Foreground"
                    Value="WhiteSmoke" />
            <Setter Property="FontSize"
                    Value="30" />
            <Setter Property="Margin"
                    Value="10,10,20,10" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="White" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBlock}"
               x:Key="nombreSalasTextBlock">
            <Setter Property="Margin"
                    Value="5" />
            <Setter Property="FontFamily"
                    Value="Lucida Sans" />
            <Setter Property="FontSize"
                    Value="30" />
            <Setter Property="FontWeight"
                    Value="Bold" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="TextAlignment"
                    Value="Center" />
            <Setter Property="Foreground"
                    Value="WhiteSmoke" />
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect />
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBlock}"
               x:Key="sesionesTextBlock">
            <Setter Property="Margin"
                    Value="3" />
            <Setter Property="FontSize"
                    Value="15" />
            <Setter Property="Foreground"
                    Value="WhiteSmoke" />
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Margin"
                    Value="5" />
        </Style>
        <Style x:Key="SalasButtonStyle"
               TargetType="{x:Type Button}">
            <Setter Property="Width"
                    Value="56" />
            <Setter Property="Height"
                    Value="56" />
            <Setter Property="Background"
                    Value="Crimson" />
            <Setter Property="Foreground"
                    Value="WhiteSmoke" />
            <Setter Property="Margin"
                    Value="15" />
            <Setter Property="FontSize"
                    Value="15" />
            <Setter Property="DockPanel.Dock"
                    Value="Bottom" />
            <Style.BasedOn>
                <Style TargetType="{x:Type ButtonBase}">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="2"
                                                       SnapsToDevicePixels="True"
                                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                                       StrokeThickness="1"
                                                       StrokeDashArray="1 2" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background"
                            Value="{DynamicResource PrimaryHueMidBrush}" />
                    <Setter Property="BorderBrush"
                            Value="{DynamicResource PrimaryHueMidBrush}" />
                    <Setter Property="Foreground"
                            Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                    <Setter Property="materialDesign:RippleAssist.Feedback"
                            Value="White" />
                    <Setter Property="materialDesign:ButtonProgressAssist.IndicatorForeground"
                            Value="{DynamicResource SecondaryHueMidBrush}" />
                    <Setter Property="materialDesign:ButtonProgressAssist.IndicatorBackground"
                            Value="{DynamicResource MaterialDesignDivider}" />
                    <Setter Property="BorderThickness"
                            Value="1" />
                    <Setter Property="Cursor"
                            Value="Hand" />
                    <Setter Property="HorizontalContentAlignment"
                            Value="Center" />
                    <Setter Property="VerticalContentAlignment"
                            Value="Center" />
                    <Setter Property="materialDesign:ShadowAssist.ShadowDepth"
                            Value="Depth2" />
                    <Setter Property="Padding"
                            Value="1" />
                    <Setter Property="Width"
                            Value="40" />
                    <Setter Property="Height"
                            Value="40" />
                    <Setter Property="materialDesign:ButtonProgressAssist.Opacity"
                            Value="1" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Grid>
                                    <AdornerDecorator CacheMode="{Binding (materialDesign:ShadowAssist.CacheMode), RelativeSource={RelativeSource Self}}">
                                        <Ellipse x:Name="border"
                                                 Fill="{TemplateBinding Background}"
                                                 Stroke="{TemplateBinding BorderBrush}"
                                                 StrokeThickness="{TemplateBinding BorderThickness}">
                                            <Ellipse.Effect>
                                                <Binding Path="(materialDesign:ShadowAssist.ShadowDepth)"
                                                         RelativeSource="{RelativeSource TemplatedParent}">
                                                    <Binding.Converter>
                                                        <materialDesign:ShadowConverter />
                                                    </Binding.Converter>
                                                </Binding>
                                            </Ellipse.Effect>
                                        </Ellipse>
                                    </AdornerDecorator>
                                    <ProgressBar x:Name="ProgressBar"
                                                 Background="{Binding (materialDesign:ButtonProgressAssist.IndicatorBackground), RelativeSource={RelativeSource TemplatedParent}}"
                                                 Foreground="{Binding (materialDesign:ButtonProgressAssist.IndicatorForeground), RelativeSource={RelativeSource TemplatedParent}}"
                                                 HorizontalAlignment="Stretch"
                                                 IsIndeterminate="{Binding (materialDesign:ButtonProgressAssist.IsIndeterminate), RelativeSource={RelativeSource TemplatedParent}}"
                                                 Maximum="{Binding (materialDesign:ButtonProgressAssist.Maximum), RelativeSource={RelativeSource TemplatedParent}}"
                                                 Margin="-8"
                                                 Minimum="{Binding (materialDesign:ButtonProgressAssist.Minimum), RelativeSource={RelativeSource TemplatedParent}}"
                                                 Opacity="{Binding (materialDesign:ButtonProgressAssist.Opacity), RelativeSource={RelativeSource TemplatedParent}}"
                                                 RenderTransformOrigin="0.5,0.5"
                                                 Style="{DynamicResource MaterialDesignCircularProgressBar}"
                                                 Value="{Binding (materialDesign:ButtonProgressAssist.Value), RelativeSource={RelativeSource TemplatedParent}}"
                                                 VerticalAlignment="Stretch">
                                        <ProgressBar.Height>
                                            <TemplateBinding Property="Height">
                                                <TemplateBinding.ConverterParameter>
                                                    <System:Int32>8</System:Int32>
                                                </TemplateBinding.ConverterParameter>
                                                <TemplateBinding.Converter>
                                                    <materialDesign:MathConverter Operation="Add" />
                                                </TemplateBinding.Converter>
                                            </TemplateBinding>
                                        </ProgressBar.Height>
                                        <ProgressBar.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="0"
                                                                ScaleX="0" />
                                            </TransformGroup>
                                        </ProgressBar.RenderTransform>
                                        <ProgressBar.Visibility>
                                            <Binding Path="(materialDesign:ButtonProgressAssist.IsIndicatorVisible)"
                                                     RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </ProgressBar.Visibility>
                                        <ProgressBar.Width>
                                            <TemplateBinding Property="Width">
                                                <TemplateBinding.ConverterParameter>
                                                    <System:Int32>8</System:Int32>
                                                </TemplateBinding.ConverterParameter>
                                                <TemplateBinding.Converter>
                                                    <materialDesign:MathConverter Operation="Add" />
                                                </TemplateBinding.Converter>
                                            </TemplateBinding>
                                        </ProgressBar.Width>
                                    </ProgressBar>
                                    <Ellipse Fill="{TemplateBinding Background}"
                                             Stroke="{TemplateBinding BorderBrush}"
                                             StrokeThickness="{TemplateBinding BorderThickness}" />
                                    <materialDesign:Ripple ClipToBounds="True"
                                                           Clip="{Binding RenderedGeometry, ElementName=GeometryEllipse}"
                                                           ContentTemplate="{TemplateBinding ContentTemplate}"
                                                           Content="{TemplateBinding Content}"
                                                           ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                           Focusable="False"
                                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                           Padding="{TemplateBinding Padding}"
                                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <Ellipse x:Name="GeometryEllipse"
                                             Focusable="False"
                                             Fill="Transparent"
                                             IsHitTestVisible="False" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsDefaulted"
                                             Value="True">
                                        <Setter Property="Stroke"
                                                TargetName="border"
                                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled"
                                             Value="False">
                                        <Setter Property="Opacity"
                                                Value="0.23" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver"
                                             Value="True">
                                        <Setter Property="materialDesign:ShadowAssist.Darken"
                                                TargetName="border"
                                                Value="True" />
                                    </Trigger>
                                    <Trigger Property="IsKeyboardFocused"
                                             Value="True">
                                        <Setter Property="materialDesign:ShadowAssist.Darken"
                                                TargetName="border"
                                                Value="True" />
                                    </Trigger>
                                    <Trigger Property="materialDesign:ButtonProgressAssist.IsIndicatorVisible"
                                             Value="True">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2"
                                                                     From="0.9"
                                                                     To="1"
                                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                                     Storyboard.TargetName="ProgressBar" />
                                                    <DoubleAnimation Duration="0:0:0.2"
                                                                     From="0.9"
                                                                     To="1"
                                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                                     Storyboard.TargetName="ProgressBar" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.2"
                                                                     From="1"
                                                                     To="0.9"
                                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                                     Storyboard.TargetName="ProgressBar" />
                                                    <DoubleAnimation Duration="0:0:0.2"
                                                                     From="1"
                                                                     To="0.9"
                                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                                     Storyboard.TargetName="ProgressBar" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.BasedOn>
        </Style>
        <Style TargetType="TextBlock"
               x:Key="infoSalasTextBlock">
            <Setter Property="Foreground"
                    Value="White" />
            <Setter Property="FontSize"
                    Value="12" />
            <Setter Property="Margin"
                    Value="5" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
        </Style>
        <ControlTemplate x:Key="SesionesLabelControlTemplate"
                         TargetType="{x:Type Label}">
            <Border BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="WhiteSmoke"
                    Padding="{TemplateBinding Padding}"
                    SnapsToDevicePixels="True">
                <Border.Effect>
                    <DropShadowEffect />
                </Border.Effect>
                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Content="{TemplateBinding Content}"
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="Foreground"
                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="RadioButton">
            <Setter Property="GroupName"
                    Value="pago" />
            <Setter Property="Foreground"
                    Value="White" />
            <Setter Property="FontSize"
                    Value="12" />
            <Setter Property="FontWeight"
                    Value="Bold" />
            <Setter Property="Margin"
                    Value="5" />
        </Style>
        <Style TargetType="TextBlock"
               x:Key="calificacionTextBlock">
            <Setter Property="FontSize"
                    Value="15" />
            <Setter Property="FontWeight"
                    Value="Bold" />
            <Setter Property="FontFamily"
                    Value="Lucida Sans" />
            <Setter Property="Text"
                    Value="{Binding Path=Calificacion}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Calificacion}"
                             Value="APTA TP">
                    <Setter Property="Foreground"
                            Value="Green" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Calificacion}"
                             Value="NRM 7">
                    <Setter Property="Foreground"
                            Value="Yellow" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Calificacion}"
                             Value="NRM 12">
                    <Setter Property="Foreground"
                            Value="Orange" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Calificacion}"
                             Value="NRM 16">
                    <Setter Property="Foreground"
                            Value="Red" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="local:CustomCommands.Config"
                        Executed="CommandBinding_Executed_Config" />
        <CommandBinding Command="local:CustomCommands.Add"
                        Executed="CommandBinding_Executed_Add" />
        <CommandBinding Command="local:CustomCommands.Buy"
                        Executed="CommandBinding_Executed_Buy"
                        CanExecute="CommandBinding_CanExecute_Buy" />
        <CommandBinding Command="local:CustomCommands.Edit"
                        Executed="CommandBinding_Executed_Edit"
                        CanExecute="CommandBinding_CanExecute_Edit" />
        <CommandBinding Command="local:CustomCommands.EditSesion"
                        Executed="CommandBinding_Executed_EditSesion" />
        <CommandBinding Command="local:CustomCommands.Help"
                        Executed="CommandBinding_Executed_Help" />
    </Window.CommandBindings>
    <DockPanel Background="DarkGray">
        <Menu DockPanel.Dock="Top"
              Background="Black"
              BorderBrush="BlueViolet"
              BorderThickness="0,0,0,5">
            <MenuItem Header="Añadir _Sesión"
                      Command="local:CustomCommands.Config" />
            <MenuItem Header="_Gestionar Sesiones"
                      Command="local:CustomCommands.EditSesion" />
            <MenuItem Header="_Ayuda"
                      Command="local:CustomCommands.Help">
            </MenuItem>
        </Menu>
        <!--Panel izquiero para seleccionar la sala a modificar o añadir-->
        <Border DockPanel.Dock="Left"
                BorderThickness="0,0,5,0">
            <DockPanel>
                <!--Botón para editar una sala-->
                <Button Style="{DynamicResource SalasButtonStyle}"
                        Command="local:CustomCommands.Edit">
                    <Button.Effect>
                        <DropShadowEffect />
                    </Button.Effect>
                    <TextBlock Text="Editar" />
                </Button>
                <!--Botón para añadir nueva sala-->
                <Button Style="{DynamicResource SalasButtonStyle}"
                        Command="local:CustomCommands.Add">
                    <Button.Effect>
                        <DropShadowEffect />
                    </Button.Effect>
                    <TextBlock Text="Añadir" />
                </Button>
                <!--ListBox para seleccionar la sala a modificar-->
                <ListBox x:Name="salasListBox"
                         ItemsSource="{Binding Salas}"
                         SelectedValue="{Binding Path=SalaSeleccionada}"
                         ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Margin="5"
                                        VerticalAlignment="Center"
                                        Background="Crimson"
                                        Height="100"
                                        Width="100">
                                <StackPanel.Effect>
                                    <DropShadowEffect />
                                </StackPanel.Effect>
                                <TextBlock Style="{StaticResource nombreSalasTextBlock}"
                                           Text="{Binding IdSala, Converter={StaticResource nombreSalaConverter}}" />
                                <TextBlock Style="{StaticResource infoSalasTextBlock}"
                                           Text="{Binding Capacidad, Converter={StaticResource capacidadSalaConverter}}" />
                                <TextBlock Style="{StaticResource infoSalasTextBlock}"
                                           Text="{Binding Disponible, Converter={StaticResource disponibleSalaConverter}}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
            </DockPanel>
        </Border>
        <!--PANEL DERECHO VENTA DE ENTRADAS-->
        <Border DockPanel.Dock="Right"
                BorderThickness="5,0,0,0"
                Width="350"
                Background="Black">
            <StackPanel>
                <TextBlock Margin="5"
                           FontSize="30"
                           FontWeight="Bold"
                           TextAlignment="Center"
                           Foreground="WhiteSmoke"><Run Text="VENTA DE ENTRADAS" /></TextBlock>
                <!--SESIONES-->
                <GroupBox Header="Sesiones"
                          Style="{StaticResource MaterialDesignCardGroupBox}"
                          Margin="15">
                    <ListBox ItemsSource="{Binding SelectedValue, Converter={StaticResource sesionesConverter}, ElementName=peliculasListBox}"
                             x:Name="sesionesListBox"
                             SelectedValue="{Binding Path=SesionSeleccionada}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Label Content="{Binding Hora}"
                                       Template="{DynamicResource SesionesLabelControlTemplate}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                    </ListBox>
                </GroupBox>
                <!--NÚMERO DE TICKETS-->
                <StackPanel Margin="25">
                    <Image Source="Assets/ticket.png"
                           Height="128" />
                    <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Center">
                        <Button Margin="5"
                                Background="Crimson"
                                x:Name="restarEntradaButton"
                                Click="restarEntradaButton_Click"
                                Content="-" />
                        <TextBlock VerticalAlignment="Center"
                                   FontSize="25"
                                   Margin="10"
                                   Foreground="WhiteSmoke"
                                   FontWeight="Bold"
                                   Text="{Binding Entradas}" />
                        <Button Margin="5"
                                Background="Crimson"
                                x:Name="sumarEntradaButton"
                                Click="sumarEntradaButton_Click"
                                Content="+" />
                    </StackPanel>
                    <TextBlock Style="{StaticResource sesionesTextBlock}"
                               Text="{Binding SelectedValue, Converter={StaticResource nombreSalaSesionConverter}, ElementName=sesionesListBox}" />
                    <TextBlock Style="{StaticResource sesionesTextBlock}"
                               Text="{Binding SelectedValue, Converter={StaticResource disponiblesConverter}, ElementName=sesionesListBox}" />
                    <TextBlock Style="{StaticResource sesionesTextBlock}"
                               Text="{Binding SelectedValue, Converter={StaticResource ocupadasConverter}, ElementName=sesionesListBox}" />
                </StackPanel>
                <WrapPanel Margin="0,25,0,25"
                           HorizontalAlignment="Center">
                    <RadioButton Content="EFECTIVO" />
                    <RadioButton Content="TARJETA" />
                    <RadioButton Content="BIZZUM" />
                </WrapPanel>
                <Button Style="{StaticResource MaterialDesignFlatAccentBgButton}"
                        Background="Gold"
                        Margin="100,20,100,0"
                        Command="local:CustomCommands.Buy"
                        Content="COMPRAR" />
            </StackPanel>
        </Border>
        <!--VISUALIZACIÓN DE LAS PELÍCULAS-->
        <ListBox ItemsSource="{Binding ListaPeliculas}"
                 SelectedValue="{Binding PeliculaSeleccionada}"
                 x:Name="peliculasListBox"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 HorizontalAlignment="Center">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <DockPanel Height="450"
                               Width="300"
                               x:Name="peliculasDockPanel"
                               Background="Black">
                        <DockPanel.Effect>
                            <DropShadowEffect />
                        </DockPanel.Effect>
                        <TextBlock DockPanel.Dock="Top" 
                                   Text="{Binding Titulo}"
                                   FontFamily="Times New Roman"
                                   FontWeight="Bold"
                                   FontSize="25"
                                   HorizontalAlignment="Center"
                                   TextAlignment="Center"
                                   Foreground="White"
                                   TextWrapping="WrapWithOverflow"/>
                        <DockPanel DockPanel.Dock="Bottom"
                                   Margin="5">
                            <TextBlock DockPanel.Dock="Left"
                                       Foreground="WhiteSmoke"
                                       Text="{Binding Genero}"
                                       FontFamily="Lucida Sans"
                                       FontSize="15"
                                       FontWeight="Bold"/>
                            <TextBlock DockPanel.Dock="Right"
                                       Style="{StaticResource calificacionTextBlock}"/>
                            <TextBlock />
                        </DockPanel>
                        <Image Source="{Binding Cartel}"
                               Stretch="Fill" />
                    </DockPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>
    </DockPanel>
</Window>
